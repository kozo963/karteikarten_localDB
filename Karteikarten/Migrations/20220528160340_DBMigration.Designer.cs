// <auto-generated />
using System;
using Karteikarten.Controller;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Karteikarten.Migrations
{
    [DbContext(typeof(EFController))]
    [Migration("20220528160340_DBMigration")]
    partial class DBMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.25");

            modelBuilder.Entity("Karteikarten.Model.karte", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("aImg")
                        .HasColumnType("BLOB");

                    b.Property<string>("aText")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("qImg")
                        .HasColumnType("BLOB");

                    b.Property<string>("qText")
                        .HasColumnType("TEXT");

                    b.Property<int>("themaid")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("themaid");

                    b.ToTable("karte");
                });

            modelBuilder.Entity("Karteikarten.Model.thema", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("themaName")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("thema");
                });

            modelBuilder.Entity("Karteikarten.Model.karte", b =>
                {
                    b.HasOne("Karteikarten.Model.thema", "thema")
                        .WithMany("karte")
                        .HasForeignKey("themaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
